# Project: adams
# Date: 2014-03-13 13:31:12
# User: fracpete
#
adams.flow.control.Flow
	-annotation
	Converts ADAMS spreadsheet archive CSV files into a single CSV file that \ncan be read by Weka and cross-validates J48 on it (happy/sad class labels).
	-actor
		adams.flow.standalone.CallableActors
			-actor
				adams.flow.source.WekaClassifierSetup
					-classifier
						weka.classifiers.meta.FilteredClassifier
							-F
							weka.filters.unsupervised.attribute.StringToWordVector -R first-last -W 1000 -prune-rate -1.0 -N 0 -stemmer weka.core.stemmers.NullStemmer -M 1 -tokenizer "weka.core.tokenizers.WordTokenizer -delimiters \" \\r\\n\\t.,;:\\\'\\\"()?!\""
							-W
							weka.classifiers.trees.J48
							--
							-C
							0.25
							-M
							2
	-actor
		adams.flow.standalone.SetVariable
			-name
			csv output file
			-var-name
			output_csv
			-var-value
			${TMP}/combined.csv
	-actor
		adams.flow.source.Start
	-actor
		adams.flow.control.Trigger
			-name
			convert csv
			-tee
				adams.flow.source.SelectFile
					-stop-if-canceled
					true
					-file-chooser-title
					Select CSV files to convert
					-extension
					csv
			-tee
				adams.flow.transformer.SetVariable
					-name
					input file
					-var-name
					input
			-tee
				adams.flow.control.Trigger
					-name
					convert
					-tee
						adams.flow.source.TweetReplay
							-replay
								adams.data.io.input.SpreadSheetConverterArchive
									-archive
									@{input}
					-tee
						adams.flow.transformer.TwitterFilter
							-expression
							text:"ðŸ˜Š" or text:"ðŸ˜‚" or text:"ðŸ˜«" or text:"ðŸ˜­"
					-tee
						adams.flow.transformer.SetVariable
							-var-name
							class
							-var-value
							?
					-tee
						adams.flow.control.ConditionalTee
							-name
							happy
							-tee
								adams.flow.transformer.SetVariable
									-var-name
									class
									-var-value
									happy
							-condition
								adams.flow.condition.bool.TwitterFilterExpression
									-expression
									text:"ðŸ˜Š" or text:"ðŸ˜‚"
					-tee
						adams.flow.control.ConditionalTee
							-name
							sad
							-tee
								adams.flow.transformer.SetVariable
									-var-name
									class
									-var-value
									sad
							-condition
								adams.flow.condition.bool.TwitterFilterExpression
									-expression
									text:"ðŸ˜«" or text:"ðŸ˜­"
					-tee
						adams.flow.transformer.TwitterConverter
							-converter
								adams.data.twitter.SpreadSheetConverter
									-spreadsheet-type
										adams.data.spreadsheet.SpreadSheet
					-tee
						adams.flow.transformer.SpreadSheetInsertColumn
							-after
							true
							-header
							Mood
					-tee
						adams.flow.transformer.SpreadSheetSetCell
							-no-copy
							true
							-row
							last
							-col
							last
							-value
							@{class}
					-tee
						adams.flow.sink.SpreadSheetFileWriter
							-output
							@{output_csv}
							-writer
								adams.data.io.output.CsvSpreadSheetWriter
									-missing
									?
									-output-comments
									false
									-appending
									true
									-quote-char
									'
									-escape-special-chars
									true
	-actor
		adams.flow.control.Trigger
			-name
			evaluate
			-tee
				adams.flow.source.FileSupplier
					-file
					@{output_csv}
			-tee
				adams.flow.transformer.WekaFileReader
					-stop-flow-on-error
					true
					-use-custom
					true
					-loader
						weka.core.converters.CSVLoader
							-S
							1,2
							-M
							?
							-B
							100
							-E
							'
							-F
							,
			-tee
				adams.flow.transformer.WekaFilter
					-filter
						weka.filters.unsupervised.attribute.StringToNominal
							-R
							last
			-tee
				adams.flow.transformer.WekaClassSelector
			-tee
				adams.flow.transformer.WekaCrossValidationEvaluator
					-output
						weka.classifiers.evaluation.output.prediction.Null
					-no-predictions
					true
			-tee
				adams.flow.transformer.WekaEvaluationSummary
					-confusion-matrix
					true
					-class-details
					true
			-tee
				adams.flow.sink.Display
	-error-handling
	ACTORS_DECIDE_TO_STOP_ON_ERROR
	-flow-execution-listener
		adams.flow.execution.NullListener

